{"version":3,"sources":["hooks/useToggle.js","hooks/useInputState.js","EditTodoForm.js","Todo.js","TodoList.js","TodoForm.js","TodoApp.js","App.js","index.js"],"names":["useToggle","initialValue","useState","state","setState","toggle","value","setValue","e","target","EditTodoForm","editTodo","task","toggleEdit","id","useInputState","handleChange","reset","onSubmit","preventDefault","style","marginLeft","width","TextField","margin","onChange","fullWidth","autoFocus","Todo","completed","removeTodo","toggleTodo","isEditing","ListItem","height","Checkbox","checked","onClick","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","TodoList","todos","length","Paper","List","map","todo","i","Divider","TodoForm","addTodo","justifyContent","padding","label","Button","marginTop","variant","color","size","type","TodoApp","initialTodos","JSON","parse","window","localStorage","getItem","setTodos","useEffect","setItem","stringify","backgroundColor","elevation","AppBar","position","background","Typography","Grid","container","item","xs","md","lg","newTodoText","uuid","todoId","updatedTodos","filter","newTask","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f297d48f.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction useToggle(initialValue = false) {\n    //call useState, \"reserive piece of state\"\n    const [state, setState] = useState(initialValue);\n    const toggle = () => {\n        setState(!state);\n    }\n    //return piece of state and function to toggle it\n    return [state, toggle];\n}\nexport default useToggle;","import { useState } from 'react';\n\n// eslint-disable-next-line\nexport default initialValue => {\n    const [value, setValue] = useState(initialValue);\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n    const reset = () => {\n        setValue('');\n    }\n    return [value, handleChange, reset]\n}","import TextField from '@material-ui/core/TextField';\nimport useInputState from './hooks/useInputState';\n\nfunction EditTodoForm({editTodo, task, toggleEdit, id}){\n    const [value, handleChange, reset] = useInputState(task);\n    return (\n        <form onSubmit={(e) => {\n            e.preventDefault();\n            editTodo(id, value);\n            reset();\n            toggleEdit();\n        }}\n        style={{marginLeft: \"1rem\", width: \"50%\"}}\n        >\n        <TextField \n        margin='normal' \n        value={value} \n        onChange={handleChange} \n        fullWidth \n        autoFocus\n        />\n        </form>\n    )\n}\n\nexport default EditTodoForm;","import ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport useToggle from \"./hooks/useToggle\";\nimport EditTodoForm from \"./EditTodoForm\";\n\nfunction Todo({ task, completed, removeTodo, toggleTodo, editTodo, id }) {\n    const [isEditing, toggle] = useToggle();\n    return (\n        <ListItem style={{height: \"64px\"}}>\n            {isEditing ? <EditTodoForm editTodo={editTodo} id={id}  task={task} toggleEdit={toggle}/> :\n                <>\n                    <Checkbox checked={completed} onClick={() => toggleTodo(id)} />\n                    <ListItemText style={{ textDecoration: completed ? 'line-through' : 'none' }}>\n                        {task}\n                    </ListItemText>\n                    <ListItemSecondaryAction>\n                        <IconButton aria-label='Edit' onClick={toggle}>\n                            <EditIcon />\n                        </IconButton>\n                        <IconButton aria-label='Delete' onClick={() => removeTodo(id)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </>\n            }\n        </ListItem>\n    )\n}\nexport default Todo;","import Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Fragment } from \"react\";\n\nimport Todo from './Todo';\n\nfunction TodoList({ todos, removeTodo, toggleTodo, editTodo }) {\n    if (todos.length) return (\n        <Paper>\n            <List>\n                {todos.map((todo, i) => (\n                    <Fragment key={todo.id}>\n                        <Todo\n                            {...todo}\n                            toggleTodo={toggleTodo}\n                            removeTodo={removeTodo}\n                            editTodo={editTodo}\n                             />\n                        {i < todos.length - 1 ? <Divider /> : ''}\n                    </Fragment>\n                    \n                ))}\n            </List>\n        </Paper>\n    )\n    return null;\n}\n\nexport default TodoList;","import Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport useInputState from './hooks/useInputState';\nimport { Button } from '@material-ui/core';\n\nfunction TodoForm({ addTodo }) {\n    const [value, handleChange, reset] = useInputState('');\n    return (\n        <Paper style={{ justifyContent: 'center', margin: \"1rem 0\", padding: '0 1rem' }}>\n            <form onSubmit={e => {\n                e.preventDefault();\n                addTodo(value);\n                reset();\n            }}>\n                <TextField\n                    value={value}\n                    onChange={handleChange}\n                    margin='normal'\n                    label='Add New Todo'\n                    style={{width: '60%'}} />\n                <Button style={{marginLeft: '4rem', marginTop: '2rem'}} variant='contained' color='secondary' size='small' type='submit'>\n                    Add\n                </Button>\n            </form>\n        </Paper>\n    )\n}\n\nexport default TodoForm;","import React, { useState, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport TodoForm from './TodoForm';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Grid from '@material-ui/core/Grid'\nimport uuid from 'uuid/dist/v4';\n\nfunction TodoApp() {\n    const initialTodos = JSON.parse(window.localStorage.getItem('todos') || '[]');\n    \n    const [todos, setTodos] = useState(initialTodos);\n\n    useEffect(() => {\n        window.localStorage.setItem('todos', JSON.stringify(todos));\n    }, [todos]);\n\n    const addTodo = newTodoText => {\n        setTodos([...todos, { id: uuid(), task: newTodoText, completed: false }])\n    }\n    const removeTodo = todoId => {\n        const updatedTodos = todos.filter(todo => todo.id !== todoId);\n\n        setTodos(updatedTodos);\n    }\n    const toggleTodo = todoId => {\n        const updatedTodos = todos.map(todo =>\n            todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\n        );\n        setTodos(updatedTodos);\n    }\n    const editTodo = (todoId, newTask) => {\n        const updatedTodos = todos.map(todo =>\n            todo.id === todoId ? { ...todo, task: newTask } : todo\n        );\n        setTodos(updatedTodos);\n    }\n    return (\n        <Paper\n            style={{\n                padding: 0,\n                margin: 0,\n                height: \"100vh\",\n                backgroundColor: \"#fafafa\",\n                \n            }}\n            elevation={1}\n        >\n            <AppBar position='static' style={{ background: 'dodgerblue', height: '64px' }}>\n                <ToolBar >\n                    <Typography style={{\n                        margin: 'auto'\n                    }} >JUST ANOTHER TODO LIST</Typography>\n                </ToolBar>\n            </AppBar>\n            <Grid container justifyContent='center' style={{ marginTop: '1rem' }}>\n                <Grid item xs={10} md={7} lg={4}>\n                    <TodoForm addTodo={addTodo} />\n                    <TodoList \n                    todos={todos} \n                    removeTodo={removeTodo} \n                    toggleTodo={toggleTodo}\n                    editTodo={editTodo} />\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n}\n\nexport default TodoApp;\n\n//todoapp\n//-todoform\n//-todolist -> todoitem\n\n//id, task, completed?","import TodoApp from \"./TodoApp\";\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}